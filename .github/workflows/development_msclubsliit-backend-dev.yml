# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - msclubsliit-backend-dev

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: npm install, build, and test
        env:
          APPLICATION_IMAGES_BUCKET: ${{ secrets.APPLICATION_IMAGES_BUCKET }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          DEV_ENVIRONMENT: ${{ secrets.DEV_ENVIRONMENT }}
          DEV_MESSAGE_BROKER_URL: ${{ secrets.DEV_MESSAGE_BROKER_URL }}
          DEV_MONGO_URI: ${{ secrets.DEV_MONGO_URI }}
          EMAIL_AUTH_PASSWORD: ${{ secrets.EMAIL_AUTH_PASSWORD }}
          EMAIL_AUTH_USER: ${{ secrets.EMAIL_AUTH_USER }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_QUEUE_NAM: ${{ secrets.EMAIL_QUEUE_NAM }}
          EMAIL_SENFGRID_USER: ${{ secrets.EMAIL_SENFGRID_USER }}
          EMAIL_SERVICE_NAME: ${{ secrets.EMAIL_SERVICE_NAME }}
          EMAIL_TEMPLATE_BUCKET: ${{ secrets.EMAIL_TEMPLATE_BUCKET }}
          EXCHANGE_NAME: ${{ secrets.EXCHANGE_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MS_MEETING_MANAGER_API: ${{ secrets.MS_MEETING_MANAGER_API }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PROD_MESSAGE_BROKER_URL: ${{ secrets.PROD_MESSAGE_BROKER_URL }}
          SENFGRID_API_KEY: ${{ secrets.SENFGRID_API_KEY }}
          STORAGE_BUCKET_URL: ${{ secrets.STORAGE_BUCKET_URL }}
          STORAGE_CLIENT_EMAIL: ${{ secrets.STORAGE_CLIENT_EMAIL }}
          STORAGE_PRIVATE_KEY: ${{ secrets.STORAGE_PRIVATE_KEY }}
          STORAGE_PROJECT_ID: ${{ secrets.STORAGE_PROJECT_ID }}
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "msclubsliit-backend-dev"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_60635EFB0B954D4CB0F5E6B42DE33EFE }}
          package: .
